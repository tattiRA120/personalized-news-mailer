body {
    font-family: sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 20px;
    background-color: #f4f4f4;
    color: #333;
}

.container {
    max-width: 700px;
    margin: 20px auto;
    background-color: #fff;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #0056b3;
    text-align: center;
    margin-bottom: 20px;
}

p {
    margin-bottom: 15px;
}

#articles-list {
    margin-top: 20px;
    border-top: 1px solid #eee;
    padding-top: 20px;
}

.article-item {
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 15px;
    margin-bottom: 15px;
    display: flex;
    align-items: flex-start; /* 記事コンテンツとボタンを上揃え */
}

.article-main-content {
    flex-grow: 1; /* 残りのスペースをすべて使用 */
    margin-right: 15px; /* ボタンとの間にスペース */
}

.interest-selection {
    display: flex;
    flex-direction: column; /* 「興味あり」「興味なし」ボタンを縦に並べる */
    gap: 5px; /* ボタン間のスペース */
    margin-top: 0; /* 上部のマージンをリセット */
}

.radio-label {
    display: flex;
    align-items: center;
    justify-content: center; /* テキストを中央揃え */
    width: 80px; /* ボタンの固定幅 */
    height: 30px; /* ボタンの固定高さ */
    border: 1px solid transparent; /* デフォルトで透明なボーダー */
    border-radius: 15px; /* 角を丸くする */
    cursor: pointer;
    transition: all 0.3s ease;
    color: white; /* テキスト色を白に */
    font-size: 0.8em; /* フォントサイズを小さく */
    flex-shrink: 0; /* 縮小しない */
}

.interested-label {
    background-color: #28a745; /* 緑色 */
}

.not-interested-label {
    background-color: #dc3545; /* 赤色 */
}

.radio-label:hover {
    opacity: 0.8; /* ホバーで少し透明にする */
}

.radio-label input[type="radio"] {
    position: absolute; /* 絶対配置 */
    opacity: 0; /* 透明にして非表示 */
    width: 0;
    height: 0;
    pointer-events: none; /* クリックイベントを無効化 */
}

.radio-label input[type="radio"]:checked {
    /* input自体は非表示なので、ここでは直接スタイルを適用しない */
}

.radio-label input[type="radio"]:checked + span {
    /* spanはlabelの子要素なので、labelの背景色を変更する */
    /* ここではボーダーとシャドウのみを適用し、背景色は親のlabelで制御 */
    border: 2px solid #0056b3; /* 選択時に濃い青のボーダー */
    box-shadow: 0 0 0 2px #007bff; /* 選択時に青いシャドウ */
    font-weight: bold;
    /* spanのpaddingとmarginを調整して、label全体が選択されたように見せる */
    padding: 8px 15px;
    margin: -8px -15px;
    border-radius: 15px;
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
}

/* 選択されたラベルの背景色を変更 */
.radio-label.interested-label input[type="radio"]:checked + span {
    background-color: #218838; /* 選択時の緑色を少し濃く */
}

.radio-label.not-interested-label input[type="radio"]:checked + span {
    background-color: #c82333; /* 選択時の赤色を少し濃く */
}

/* 既存のチェックボックススタイルはラジオボタンには不要なので削除 */
/* .article-item input[type="checkbox"] {
    margin-right: 15px;
    margin-top: 5px;
    transform: scale(1.2);
} */

.article-content {
    flex-grow: 1;
}

.article-content h3 {
    margin-top: 0;
    margin-bottom: 5px;
    color: #007bff;
}

.article-content p {
    margin-bottom: 0;
    font-size: 0.9em;
    color: #555;
}

#submit-button {
    display: block;
    width: 100%;
    padding: 12px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1.1em;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-top: 20px;
}

#submit-button:hover:not(:disabled) {
    background-color: #0056b3;
}

#submit-button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
}

#message {
    margin-top: 20px;
    text-align: center;
    color: green;
}

#message.error {
    color: red;
}

/* ローディングアニメーションのスタイル */
#submit-button {
    position: relative;
    overflow: hidden;
}

#submit-button .button-text {
    visibility: visible;
}

#submit-button.loading .button-text {
    visibility: hidden;
}

#submit-button .spinner {
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #fff;
    animation: spin 1s ease-in-out infinite;
}

#submit-button.loading .spinner {
    display: block;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}
