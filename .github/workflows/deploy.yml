name: Deploy Cloudflare Worker

on:
  push:
    branches:
      - main # デプロイをトリガーするブランチを指定

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # プロジェクトで使用しているNode.jsのバージョンを指定

      - name: Install dependencies
        run: npm install

      # Add steps to delete existing Variables
      - name: Delete GEMINI_API_KEY Variable
        run: npx wrangler vars delete GEMINI_API_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true # Continue if variable doesn't exist

      - name: Delete OPENAI_API_KEY Variable
        run: npx wrangler vars delete OPENAI_API_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true # Continue if variable doesn't exist

      - name: Delete GOOGLE_CLIENT_ID Variable
        run: npx wrangler vars delete GOOGLE_CLIENT_ID
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true # Continue if variable doesn't exist

      - name: Delete GOOGLE_REDIRECT_URI Variable
        run: npx wrangler vars delete GOOGLE_REDIRECT_URI
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true # Continue if variable doesn't exist

      - name: Delete GOOGLE_CLIENT_SECRET Variable
        run: npx wrangler vars delete GOOGLE_CLIENT_SECRET
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true # Continue if variable doesn't exist

      - name: Delete SENDER_EMAIL Variable
        run: npx wrangler vars delete SENDER_EMAIL
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true # Continue if variable doesn't exist

      # Add steps to set Workers Secrets using wrangler secret put
      - name: Set GEMINI_API_KEY Secret
        run: echo "${{ secrets.GEMINI_API_KEY }}" | npx wrangler secret put GEMINI_API_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set OPENAI_API_KEY Secret
        run: echo "${{ secrets.OPENAI_API_KEY }}" | npx wrangler secret put OPENAI_API_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_CLIENT_ID Secret
        run: echo "${{ secrets.GOOGLE_CLIENT_ID }}" | npx wrangler secret put GOOGLE_CLIENT_ID
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_REDIRECT_URI Secret
        run: echo "${{ secrets.GOOGLE_REDIRECT_URI }}" | npx wrangler secret put GOOGLE_REDIRECT_URI
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_CLIENT_SECRET Secret
        run: echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | npx wrangler secret put GOOGLE_CLIENT_SECRET
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set SENDER_EMAIL Secret
        run: echo "${{ secrets.SENDER_EMAIL }}" | npx wrangler secret put SENDER_EMAIL
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Publish Cloudflare Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} # wrangler.jsoncにaccount_idがないため追加
          wranglerVersion: 'latest' # 最新のWranglerを使用
          # プロジェクト名が必要な場合は追加 (wrangler.jsoncで指定済みのため不要)
          # name: your-worker-name
        # Remove env block as secrets are now set directly
        # env:
        #   GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        #   GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        #   GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
        #   GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        #   SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
