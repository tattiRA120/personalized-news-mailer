name: Deploy Cloudflare Worker

on:
  push:
    branches:
      - main # デプロイをトリガーするブランチを指定

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # プロジェクトで使用しているNode.jsのバージョンを指定

      - name: Install dependencies
        run: npm install

      # Cache Rust and Cargo
      - name: Cache Cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Setup Rust toolchain
      - name: Setup Rust toolchain
        run: |
          rustup update stable
          rustup default stable
          rustup target add wasm32-unknown-unknown

      - name: Install wasm-pack
        run: cargo install wasm-pack --force

      - name: Build WASM module
        run: npm run build:wasm

      # Add steps to set Workers Secrets using wrangler secret put
      - name: Set OPENAI_API_KEY Secret
        run: echo "${{ secrets.OPENAI_API_KEY }}" | npx wrangler secret put OPENAI_API_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_NEWS_DECODER_API_URL Secret
        run: echo "${{ secrets.GOOGLE_NEWS_DECODER_API_URL }}" | npx wrangler secret put GOOGLE_NEWS_DECODER_API_URL
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_CLIENT_ID Secret
        run: echo "${{ secrets.GOOGLE_CLIENT_ID }}" | npx wrangler secret put GOOGLE_CLIENT_ID
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_REDIRECT_URI Secret
        run: echo "${{ secrets.GOOGLE_REDIRECT_URI }}" | npx wrangler secret put GOOGLE_REDIRECT_URI
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set GOOGLE_CLIENT_SECRET Secret
        run: echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | npx wrangler secret put GOOGLE_CLIENT_SECRET
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set DEBUG_API_KEY Secret
        run: echo "${{ secrets.DEBUG_API_KEY }}" | npx wrangler secret put DEBUG_API_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set DECODER_SECRET Secret
        run: echo "${{ secrets.DECODER_SECRET }}" | npx wrangler secret put DECODER_SECRET
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Publish Cloudflare Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: 'latest' # 最新のWranglerを使用
          vars: |
            WORKER_BASE_URL
            LOG_LEVEL
        env:
          WORKER_BASE_URL: ${{ vars.WORKER_BASE_URL }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          # プロジェクト名はwrangler.jsoncで指定済みのため不要
